version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - shop-network

  kafka:
    image: confluentinc/cp-kafka:7.0.0
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    healthcheck:
      test: |
        /bin/bash -c '
        kafka-topics --bootstrap-server localhost:9092 --create --if-not-exists --topic products --partitions 1 --replication-factor 1
        '
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "29092:29092"
      - "9092:9092"
    networks:
      - shop-network

  user-service:
    build: ./user-service
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@database:5432/shop_db
      - JWT_SECRET_KEY=my-secret-key
      - JWT_ALGORITHM=HS256
    depends_on:
      - database
    networks:
      - shop-network

  product-service:
    build: ./product-service
    ports:
      - "8001:8001"
    environment:
      - MONGO_URL=mongodb://mongo:27017
      - JWT_SECRET_KEY=my-secret-key
      - JWT_ALGORITHM=HS256
      - KAFKA_BROKER=kafka:9092
    depends_on:
      - mongo
      - kafka
    networks:
      - shop-network

  product-command-handler:
    build: ./product-command-handler
    depends_on:
      - mongo
      - kafka
    environment:
      - MONGO_URL=mongodb://mongo:27017
      - KAFKA_BROKER=kafka:9092
    networks:
      - shop-network

  database:
    image: postgres:14
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=shop_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - shop-network

  mongo:
    image: mongo:5.0
    volumes:
      - mongo_data:/data/db
    networks:
      - shop-network

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - shop-network

networks:
  shop-network:
    driver: bridge

volumes:
  postgres_data:
  mongo_data:
  redis_data: